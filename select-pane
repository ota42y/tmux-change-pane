#!/bin/zsh
# inspire by: https://github.com/abicky/swap-pane

alias message="tmux display-message"

if [ -z "$TMUX" ]; then
    echo "Not in a tmux session" >&2
    exit 1
fi

before_pane=$1
current_pane=$2

trap "restore; exit 1" 1 2 3 15
function restore {
  tmux swap-pane -t $before_pane -s $current_pane
  tmux kill-pane -t $current_pane
}


if type peco > /dev/null 2>&1; then
	COMMAND="peco"
elif type percol > /dev/null 2>&1; then
	COMMAND="percol"
fi

if [ -z "${COMMAND+x}" ]; then
	message "can't find peco or percol command"
	restore
	return 1
fi
echo "use -- $COMMAND"


panes=$(tmux list-panes -sF '#I.#P #{pane_title}' | egrep -v "^($current_pane|$before_pane)")
selected_pane=$(echo $panes | $COMMAND | sed 's/ .*//')

echo "pane"
echo $panes
echo "select-pane"
echo $selected_pane
echo "before-pane"
echo $before_pane

if [ -z "$selected_pane" ]; then
	echo "not solected" >$2
	restore
	return 1
fi

tmux swap-pane -t $before_pane -s $current_pane
tmux swap-pane -t $before_pane -s $selected_pane
tmux kill-pane -t $current_pane
